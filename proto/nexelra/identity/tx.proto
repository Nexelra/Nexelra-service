syntax = "proto3";

package nexelra.identity;

option go_package = "Nexelra/x/identity/types";

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "nexelra/identity/params.proto";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc CreateIdentity(MsgCreateIdentity) returns (MsgCreateIdentityResponse);
}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "Nexelra/x/identity/MsgUpdateParams";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message MsgUpdateParamsResponse {}

message MsgCreateIdentity {
  option (cosmos.msg.v1.signer) = "creator";
  
  string creator = 1;
  string cccdId = 2;
}

message MsgCreateIdentityResponse {}
